// <auto-generated />
using System;
using EIMS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EIMS.Migrations
{
    [DbContext(typeof(EimsDbContext))]
    [Migration("20250822060822_InitialUpdatePermitWorks")]
    partial class InitialUpdatePermitWorks
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EIMS.Models.Approval", b =>
                {
                    b.Property<int>("ApprovalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApprovalId"));

                    b.Property<int>("ApproverId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Decision")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DecisionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PermitId")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApprovalId");

                    b.HasIndex("ApproverId");

                    b.HasIndex("PermitId");

                    b.ToTable("Approvals");
                });

            modelBuilder.Entity("EIMS.Models.CardType", b =>
                {
                    b.Property<int>("CardTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CardTypeId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CardTypeId");

                    b.ToTable("CardTypes");
                });

            modelBuilder.Entity("EIMS.Models.DocumentRequirement", b =>
                {
                    b.Property<int>("DocumentRequirementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentRequirementId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DocumentRequirementId");

                    b.ToTable("DocumentRequirements");
                });

            modelBuilder.Entity("EIMS.Models.HseCard", b =>
                {
                    b.Property<int>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CardId"));

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CardTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IssuedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("IssuedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CardId");

                    b.HasIndex("CardNumber")
                        .IsUnique();

                    b.HasIndex("CardTypeId");

                    b.HasIndex("IssuedBy");

                    b.HasIndex("UserId");

                    b.ToTable("HseCards");
                });

            modelBuilder.Entity("EIMS.Models.IncidentReport", b =>
                {
                    b.Property<int>("IncidentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IncidentId"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("IncidentId");

                    b.HasIndex("UserId");

                    b.ToTable("IncidentReports");
                });

            modelBuilder.Entity("EIMS.Models.Investigation", b =>
                {
                    b.Property<int>("InvestigationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvestigationId"));

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CorrectiveAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HSEOfficerId")
                        .HasColumnType("int");

                    b.Property<int>("IncidentId")
                        .HasColumnType("int");

                    b.Property<string>("PreventiveAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RootCause")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InvestigationId");

                    b.HasIndex("HSEOfficerId");

                    b.HasIndex("IncidentId")
                        .IsUnique();

                    b.ToTable("Investigations");
                });

            modelBuilder.Entity("EIMS.Models.PermitRequirement", b =>
                {
                    b.Property<int>("RequirementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequirementId"));

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequiredCardTypeId")
                        .HasColumnType("int");

                    b.Property<string>("RequiredTraining")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RequirementId");

                    b.HasIndex("RequiredCardTypeId");

                    b.ToTable("PermitRequirements");
                });

            modelBuilder.Entity("EIMS.Models.PermitToWork", b =>
                {
                    b.Property<int>("PermitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PermitId"));

                    b.Property<bool>("AutoApproved")
                        .HasColumnType("bit");

                    b.Property<int?>("AutoApprovedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AutoApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RequiredCardTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("WorkType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PermitId");

                    b.HasIndex("AutoApprovedBy");

                    b.HasIndex("RequiredCardTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("PermitToWorks");
                });

            modelBuilder.Entity("EIMS.Models.Training", b =>
                {
                    b.Property<int>("TrainingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrainingId"));

                    b.Property<string>("CertificateURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrainingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TrainingId");

                    b.HasIndex("UserId");

                    b.ToTable("Trainings");
                });

            modelBuilder.Entity("EIMS.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EIMS.Models.UserDocument", b =>
                {
                    b.Property<int>("UserDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserDocumentId"));

                    b.Property<int>("DocumentRequirementId")
                        .HasColumnType("int");

                    b.Property<string>("FileURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserDocumentId");

                    b.HasIndex("DocumentRequirementId");

                    b.HasIndex("UserId", "DocumentRequirementId")
                        .IsUnique();

                    b.ToTable("UseDocuments");
                });

            modelBuilder.Entity("EIMS.Models.Approval", b =>
                {
                    b.HasOne("EIMS.Models.User", "Approver")
                        .WithMany("Approvals")
                        .HasForeignKey("ApproverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EIMS.Models.PermitToWork", "Permit")
                        .WithMany("Approvals")
                        .HasForeignKey("PermitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Approver");

                    b.Navigation("Permit");
                });

            modelBuilder.Entity("EIMS.Models.HseCard", b =>
                {
                    b.HasOne("EIMS.Models.CardType", "CardType")
                        .WithMany("HseCards")
                        .HasForeignKey("CardTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EIMS.Models.User", "IssueByUser")
                        .WithMany()
                        .HasForeignKey("IssuedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EIMS.Models.User", "User")
                        .WithMany("HseCards")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CardType");

                    b.Navigation("IssueByUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EIMS.Models.IncidentReport", b =>
                {
                    b.HasOne("EIMS.Models.User", "User")
                        .WithMany("IncidentReports")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EIMS.Models.Investigation", b =>
                {
                    b.HasOne("EIMS.Models.User", "HSEOfficer")
                        .WithMany()
                        .HasForeignKey("HSEOfficerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EIMS.Models.IncidentReport", "Incident")
                        .WithOne("Investigation")
                        .HasForeignKey("EIMS.Models.Investigation", "IncidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HSEOfficer");

                    b.Navigation("Incident");
                });

            modelBuilder.Entity("EIMS.Models.PermitRequirement", b =>
                {
                    b.HasOne("EIMS.Models.CardType", "RequiredCardType")
                        .WithMany("PermitRequirements")
                        .HasForeignKey("RequiredCardTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RequiredCardType");
                });

            modelBuilder.Entity("EIMS.Models.PermitToWork", b =>
                {
                    b.HasOne("EIMS.Models.User", "AutoApprovedByUser")
                        .WithMany()
                        .HasForeignKey("AutoApprovedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EIMS.Models.CardType", "RequiredCardType")
                        .WithMany()
                        .HasForeignKey("RequiredCardTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EIMS.Models.User", "User")
                        .WithMany("Permits")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AutoApprovedByUser");

                    b.Navigation("RequiredCardType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EIMS.Models.Training", b =>
                {
                    b.HasOne("EIMS.Models.User", "User")
                        .WithMany("Trainings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EIMS.Models.UserDocument", b =>
                {
                    b.HasOne("EIMS.Models.DocumentRequirement", "DocumentRequirement")
                        .WithMany()
                        .HasForeignKey("DocumentRequirementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EIMS.Models.User", "User")
                        .WithMany("UserDocuments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumentRequirement");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EIMS.Models.CardType", b =>
                {
                    b.Navigation("HseCards");

                    b.Navigation("PermitRequirements");
                });

            modelBuilder.Entity("EIMS.Models.IncidentReport", b =>
                {
                    b.Navigation("Investigation");
                });

            modelBuilder.Entity("EIMS.Models.PermitToWork", b =>
                {
                    b.Navigation("Approvals");
                });

            modelBuilder.Entity("EIMS.Models.User", b =>
                {
                    b.Navigation("Approvals");

                    b.Navigation("HseCards");

                    b.Navigation("IncidentReports");

                    b.Navigation("Permits");

                    b.Navigation("Trainings");

                    b.Navigation("UserDocuments");
                });
#pragma warning restore 612, 618
        }
    }
}
